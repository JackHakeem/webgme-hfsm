{{#if Guard}}
else if ( {{{Guard}}} ) {
{{else}}{{!-- ELSE IF NOT GUARD --}}
else if ( true ) {
{{~/if}}
  {{#if finalState.isChoice}}
  // Going into a choice pseudo-state, let it handle its
  // guards and perform the state transition
  if (false) { }
  {{#each finalState.ExternalTransitions}}
  {{> ExternalTransitionTempl }}
  {{~/each}}
  {{else}}{{!-- ELSE IF NOT finalState.isChoice --}}
  // We are going into either a regular state, deep history
  // state, or a shallow history state, just need to make
  // the right state active, run the exit()s, Action, and
  // entry()s
  //
  // set the new active state
  {{{finalState.fullyQualifiedVariableName}}}->makeActive();
  // call the exit() function for the old state
  activeLeaf->exit();
  // run the transition function (s)
  {{{transitionFunc}}}
  {{#if finalState.isEnd}}
  // no entry because we have reached the end state.
  {{else}}{{!-- ELSE IF NOT finalState.isEnd --}}
  // call the entry() function for the new branch from the
  // common parent's new active child
  {{{newBranchRoot}}}->entry();
  {{~/if}}{{!-- END IF NOT finalState.isEnd --}}
  // make sure nothing else handles this event
  handled = true;
  {{~/if}}{{!-- END IF NOT finalState.isChoice --}}
}
